
as608.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002e2  00800100  000008de  00000952  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c64  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000020da  00000000  00000000  00000dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bad  00000000  00000000  00002e9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e74  00000000  00000000  00003a4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000029c  00000000  00000000  000048c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005f4  00000000  00000000  00004b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001177  00000000  00000000  00005150  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  000062c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__ctors_end>
   4:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
   8:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
   c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  10:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  14:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  18:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  1c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  20:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  24:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  28:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  2c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  30:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  34:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  38:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  3c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  40:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  44:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  48:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  4c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  50:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  54:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  58:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  5c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  60:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  64:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  68:	d4 03       	fmuls	r21, r20
  6a:	8c 03       	fmulsu	r16, r20
  6c:	8f 03       	fmulsu	r16, r23
  6e:	92 03       	fmuls	r17, r18
  70:	d1 03       	fmuls	r21, r17
  72:	d1 03       	fmuls	r21, r17
  74:	95 03       	fmuls	r17, r21
  76:	98 03       	fmulsu	r17, r16
  78:	9b 03       	fmulsu	r17, r19
  7a:	9e 03       	fmulsu	r17, r22
  7c:	a1 03       	fmuls	r18, r17
  7e:	a4 03       	fmuls	r18, r20
  80:	a7 03       	fmuls	r18, r23
  82:	aa 03       	fmulsu	r18, r18
  84:	ad 03       	fmulsu	r18, r21
  86:	b0 03       	fmuls	r19, r16
  88:	b3 03       	fmuls	r19, r19
  8a:	b6 03       	fmuls	r19, r22
  8c:	d1 03       	fmuls	r21, r17
  8e:	b9 03       	fmulsu	r19, r17
  90:	d1 03       	fmuls	r21, r17
  92:	bc 03       	fmulsu	r19, r20
  94:	d1 03       	fmuls	r21, r17
  96:	d1 03       	fmuls	r21, r17
  98:	bf 03       	fmulsu	r19, r23
  9a:	c2 03       	fmuls	r20, r18
  9c:	c5 03       	fmuls	r20, r21
  9e:	c8 03       	fmulsu	r20, r16
  a0:	cb 03       	fmulsu	r20, r19
  a2:	ce 03       	fmulsu	r20, r22

000000a4 <__ctors_end>:
  a4:	11 24       	eor	r1, r1
  a6:	1f be       	out	0x3f, r1	; 63
  a8:	cf ef       	ldi	r28, 0xFF	; 255
  aa:	d8 e0       	ldi	r29, 0x08	; 8
  ac:	de bf       	out	0x3e, r29	; 62
  ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
  b0:	13 e0       	ldi	r17, 0x03	; 3
  b2:	a0 e0       	ldi	r26, 0x00	; 0
  b4:	b1 e0       	ldi	r27, 0x01	; 1
  b6:	ee ed       	ldi	r30, 0xDE	; 222
  b8:	f8 e0       	ldi	r31, 0x08	; 8
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x10>
  bc:	05 90       	lpm	r0, Z+
  be:	0d 92       	st	X+, r0
  c0:	a2 3e       	cpi	r26, 0xE2	; 226
  c2:	b1 07       	cpc	r27, r17
  c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0xc>
  c6:	0e 94 aa 02 	call	0x554	; 0x554 <main>
  ca:	0c 94 6d 04 	jmp	0x8da	; 0x8da <_exit>

000000ce <__bad_interrupt>:
  ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d2 <LCDBusyLoop>:
  d2:	84 b1       	in	r24, 0x04	; 4
  d4:	80 7f       	andi	r24, 0xF0	; 240
  d6:	84 b9       	out	0x04, r24	; 4
  d8:	5e 9a       	sbi	0x0b, 6	; 11
  da:	5b 98       	cbi	0x0b, 3	; 11
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	8a 95       	dec	r24
  e0:	f1 f7       	brne	.-4      	; 0xde <LCDBusyLoop+0xc>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCDBusyLoop+0x12>
  e4:	2c 9a       	sbi	0x05, 4	; 5
  e6:	92 e0       	ldi	r25, 0x02	; 2
  e8:	9a 95       	dec	r25
  ea:	f1 f7       	brne	.-4      	; 0xe8 <LCDBusyLoop+0x16>
  ec:	00 c0       	rjmp	.+0      	; 0xee <LCDBusyLoop+0x1c>
  ee:	83 b1       	in	r24, 0x03	; 3
  f0:	82 95       	swap	r24
  f2:	80 7f       	andi	r24, 0xF0	; 240
  f4:	92 e0       	ldi	r25, 0x02	; 2
  f6:	9a 95       	dec	r25
  f8:	f1 f7       	brne	.-4      	; 0xf6 <LCDBusyLoop+0x24>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <LCDBusyLoop+0x2a>
  fc:	2c 98       	cbi	0x05, 4	; 5
  fe:	95 e0       	ldi	r25, 0x05	; 5
 100:	9a 95       	dec	r25
 102:	f1 f7       	brne	.-4      	; 0x100 <LCDBusyLoop+0x2e>
 104:	00 00       	nop
 106:	2c 9a       	sbi	0x05, 4	; 5
 108:	92 e0       	ldi	r25, 0x02	; 2
 10a:	9a 95       	dec	r25
 10c:	f1 f7       	brne	.-4      	; 0x10a <LCDBusyLoop+0x38>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <LCDBusyLoop+0x3e>
 110:	93 b1       	in	r25, 0x03	; 3
 112:	92 e0       	ldi	r25, 0x02	; 2
 114:	9a 95       	dec	r25
 116:	f1 f7       	brne	.-4      	; 0x114 <LCDBusyLoop+0x42>
 118:	00 c0       	rjmp	.+0      	; 0x11a <LCDBusyLoop+0x48>
 11a:	2c 98       	cbi	0x05, 4	; 5
 11c:	95 e0       	ldi	r25, 0x05	; 5
 11e:	9a 95       	dec	r25
 120:	f1 f7       	brne	.-4      	; 0x11e <LCDBusyLoop+0x4c>
 122:	00 00       	nop
 124:	88 23       	and	r24, r24
 126:	f4 f2       	brlt	.-68     	; 0xe4 <LCDBusyLoop+0x12>
 128:	5e 98       	cbi	0x0b, 6	; 11
 12a:	84 b1       	in	r24, 0x04	; 4
 12c:	8f 60       	ori	r24, 0x0F	; 15
 12e:	84 b9       	out	0x04, r24	; 4
 130:	08 95       	ret

00000132 <LCDByte>:
 132:	28 2f       	mov	r18, r24
 134:	22 95       	swap	r18
 136:	2f 70       	andi	r18, 0x0F	; 15
 138:	8f 70       	andi	r24, 0x0F	; 15
 13a:	61 11       	cpse	r22, r1
 13c:	02 c0       	rjmp	.+4      	; 0x142 <LCDByte+0x10>
 13e:	5b 98       	cbi	0x0b, 3	; 11
 140:	01 c0       	rjmp	.+2      	; 0x144 <LCDByte+0x12>
 142:	5b 9a       	sbi	0x0b, 3	; 11
 144:	92 e0       	ldi	r25, 0x02	; 2
 146:	9a 95       	dec	r25
 148:	f1 f7       	brne	.-4      	; 0x146 <LCDByte+0x14>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <LCDByte+0x1a>
 14c:	2c 9a       	sbi	0x05, 4	; 5
 14e:	95 b1       	in	r25, 0x05	; 5
 150:	90 7f       	andi	r25, 0xF0	; 240
 152:	92 2b       	or	r25, r18
 154:	95 b9       	out	0x05, r25	; 5
 156:	95 e0       	ldi	r25, 0x05	; 5
 158:	9a 95       	dec	r25
 15a:	f1 f7       	brne	.-4      	; 0x158 <LCDByte+0x26>
 15c:	00 00       	nop
 15e:	2c 98       	cbi	0x05, 4	; 5
 160:	95 e0       	ldi	r25, 0x05	; 5
 162:	9a 95       	dec	r25
 164:	f1 f7       	brne	.-4      	; 0x162 <LCDByte+0x30>
 166:	00 00       	nop
 168:	2c 9a       	sbi	0x05, 4	; 5
 16a:	95 b1       	in	r25, 0x05	; 5
 16c:	90 7f       	andi	r25, 0xF0	; 240
 16e:	89 2b       	or	r24, r25
 170:	85 b9       	out	0x05, r24	; 5
 172:	85 e0       	ldi	r24, 0x05	; 5
 174:	8a 95       	dec	r24
 176:	f1 f7       	brne	.-4      	; 0x174 <LCDByte+0x42>
 178:	00 00       	nop
 17a:	2c 98       	cbi	0x05, 4	; 5
 17c:	95 e0       	ldi	r25, 0x05	; 5
 17e:	9a 95       	dec	r25
 180:	f1 f7       	brne	.-4      	; 0x17e <LCDByte+0x4c>
 182:	00 00       	nop
 184:	0e 94 69 00 	call	0xd2	; 0xd2 <LCDBusyLoop>
 188:	08 95       	ret

0000018a <LCDWriteString>:
 18a:	0f 93       	push	r16
 18c:	1f 93       	push	r17
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	8c 01       	movw	r16, r24
 194:	fc 01       	movw	r30, r24
 196:	80 81       	ld	r24, Z
 198:	88 23       	and	r24, r24
 19a:	09 f1       	breq	.+66     	; 0x1de <LCDWriteString+0x54>
 19c:	85 32       	cpi	r24, 0x25	; 37
 19e:	a9 f4       	brne	.+42     	; 0x1ca <LCDWriteString+0x40>
 1a0:	e8 01       	movw	r28, r16
 1a2:	21 96       	adiw	r28, 0x01	; 1
 1a4:	f8 01       	movw	r30, r16
 1a6:	81 81       	ldd	r24, Z+1	; 0x01
 1a8:	80 53       	subi	r24, 0x30	; 48
 1aa:	88 30       	cpi	r24, 0x08	; 8
 1ac:	20 f4       	brcc	.+8      	; 0x1b6 <LCDWriteString+0x2c>
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 1b4:	0e c0       	rjmp	.+28     	; 0x1d2 <LCDWriteString+0x48>
 1b6:	61 e0       	ldi	r22, 0x01	; 1
 1b8:	85 e2       	ldi	r24, 0x25	; 37
 1ba:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 1be:	61 e0       	ldi	r22, 0x01	; 1
 1c0:	f8 01       	movw	r30, r16
 1c2:	81 81       	ldd	r24, Z+1	; 0x01
 1c4:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <LCDWriteString+0x48>
 1ca:	61 e0       	ldi	r22, 0x01	; 1
 1cc:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 1d0:	e8 01       	movw	r28, r16
 1d2:	8e 01       	movw	r16, r28
 1d4:	0f 5f       	subi	r16, 0xFF	; 255
 1d6:	1f 4f       	sbci	r17, 0xFF	; 255
 1d8:	89 81       	ldd	r24, Y+1	; 0x01
 1da:	81 11       	cpse	r24, r1
 1dc:	df cf       	rjmp	.-66     	; 0x19c <LCDWriteString+0x12>
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	08 95       	ret

000001e8 <LCDGotoXY>:
 1e8:	84 31       	cpi	r24, 0x14	; 20
 1ea:	78 f4       	brcc	.+30     	; 0x20a <LCDGotoXY+0x22>
 1ec:	62 30       	cpi	r22, 0x02	; 2
 1ee:	31 f0       	breq	.+12     	; 0x1fc <LCDGotoXY+0x14>
 1f0:	63 30       	cpi	r22, 0x03	; 3
 1f2:	31 f0       	breq	.+12     	; 0x200 <LCDGotoXY+0x18>
 1f4:	61 30       	cpi	r22, 0x01	; 1
 1f6:	29 f4       	brne	.+10     	; 0x202 <LCDGotoXY+0x1a>
 1f8:	80 64       	ori	r24, 0x40	; 64
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <LCDGotoXY+0x1a>
 1fc:	8c 5e       	subi	r24, 0xEC	; 236
 1fe:	01 c0       	rjmp	.+2      	; 0x202 <LCDGotoXY+0x1a>
 200:	8c 5a       	subi	r24, 0xAC	; 172
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	80 68       	ori	r24, 0x80	; 128
 206:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 20a:	08 95       	ret

0000020c <LCDInit>:
 20c:	0f 93       	push	r16
 20e:	1f 93       	push	r17
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	c8 2f       	mov	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	86 e7       	ldi	r24, 0x76	; 118
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <LCDInit+0x10>
 224:	00 c0       	rjmp	.+0      	; 0x226 <LCDInit+0x1a>
 226:	00 00       	nop
 228:	84 b1       	in	r24, 0x04	; 4
 22a:	8f 60       	ori	r24, 0x0F	; 15
 22c:	84 b9       	out	0x04, r24	; 4
 22e:	24 9a       	sbi	0x04, 4	; 4
 230:	53 9a       	sbi	0x0a, 3	; 10
 232:	56 9a       	sbi	0x0a, 6	; 10
 234:	85 b1       	in	r24, 0x05	; 5
 236:	80 7f       	andi	r24, 0xF0	; 240
 238:	85 b9       	out	0x05, r24	; 5
 23a:	2c 98       	cbi	0x05, 4	; 5
 23c:	5e 98       	cbi	0x0b, 6	; 11
 23e:	5b 98       	cbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 240:	00 c0       	rjmp	.+0      	; 0x242 <LCDInit+0x36>
 242:	00 c0       	rjmp	.+0      	; 0x244 <LCDInit+0x38>
 244:	00 00       	nop
 246:	2c 9a       	sbi	0x05, 4	; 5
 248:	29 9a       	sbi	0x05, 1	; 5
 24a:	25 e0       	ldi	r18, 0x05	; 5
 24c:	2a 95       	dec	r18
 24e:	f1 f7       	brne	.-4      	; 0x24c <LCDInit+0x40>
 250:	00 00       	nop
 252:	2c 98       	cbi	0x05, 4	; 5
 254:	85 e0       	ldi	r24, 0x05	; 5
 256:	8a 95       	dec	r24
 258:	f1 f7       	brne	.-4      	; 0x256 <LCDInit+0x4a>
 25a:	00 00       	nop
 25c:	0e 94 69 00 	call	0xd2	; 0xd2 <LCDBusyLoop>
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	8c 2f       	mov	r24, r28
 264:	8c 60       	ori	r24, 0x0C	; 12
 266:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 26a:	60 e0       	ldi	r22, 0x00	; 0
 26c:	88 e2       	ldi	r24, 0x28	; 40
 26e:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 272:	60 e0       	ldi	r22, 0x00	; 0
 274:	80 e4       	ldi	r24, 0x40	; 64
 276:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 27a:	c0 e0       	ldi	r28, 0x00	; 0
 27c:	d1 e0       	ldi	r29, 0x01	; 1
 27e:	00 e4       	ldi	r16, 0x40	; 64
 280:	11 e0       	ldi	r17, 0x01	; 1
 282:	61 e0       	ldi	r22, 0x01	; 1
 284:	89 91       	ld	r24, Y+
 286:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 28a:	c0 17       	cp	r28, r16
 28c:	d1 07       	cpc	r29, r17
 28e:	c9 f7       	brne	.-14     	; 0x282 <LCDInit+0x76>
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	1f 91       	pop	r17
 29e:	0f 91       	pop	r16
 2a0:	08 95       	ret

000002a2 <LCDClearLineXY>:
 2a2:	1f 93       	push	r17
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	d8 2f       	mov	r29, r24
 2aa:	16 2f       	mov	r17, r22
 2ac:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 2b0:	d0 31       	cpi	r29, 0x10	; 16
 2b2:	40 f4       	brcc	.+16     	; 0x2c4 <LCDClearLineXY+0x22>
 2b4:	cd 2f       	mov	r28, r29
 2b6:	80 e4       	ldi	r24, 0x40	; 64
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
 2be:	cf 5f       	subi	r28, 0xFF	; 255
 2c0:	c0 31       	cpi	r28, 0x10	; 16
 2c2:	c9 f7       	brne	.-14     	; 0x2b6 <LCDClearLineXY+0x14>
 2c4:	61 2f       	mov	r22, r17
 2c6:	8d 2f       	mov	r24, r29
 2c8:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	1f 91       	pop	r17
 2d2:	08 95       	ret

000002d4 <keys_init>:
    }
}

void keys_init()
{
	DDRC &= ~(1<<PINC0); //Enroll Key
 2d4:	38 98       	cbi	0x07, 0	; 7
	DDRC &= ~(1<<PINC2); //Scan key
 2d6:	3a 98       	cbi	0x07, 2	; 7
	PORTC |= 1<<PINC0;
 2d8:	40 9a       	sbi	0x08, 0	; 8
	PORTC |= 1<<PINC2;
 2da:	42 9a       	sbi	0x08, 2	; 8
 2dc:	08 95       	ret

000002de <process_result>:
	_delay_ms(4000);
	LCDClear();
}

void process_result(uint16_t ret)
{
 2de:	cf 93       	push	r28
 2e0:	c8 2f       	mov	r28, r24
   LCDClearLineXY(0,1);
 2e2:	61 e0       	ldi	r22, 0x01	; 1
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	0e 94 51 01 	call	0x2a2	; 0x2a2 <LCDClearLineXY>
   LCDWriteStringXY(0,1,finger_get_response_string(ret));
 2ea:	61 e0       	ldi	r22, 0x01	; 1
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 2f2:	8c 2f       	mov	r24, r28
 2f4:	0e 94 82 03 	call	0x704	; 0x704 <finger_get_response_string>
 2f8:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2fc:	2f ef       	ldi	r18, 0xFF	; 255
 2fe:	87 ea       	ldi	r24, 0xA7	; 167
 300:	91 e6       	ldi	r25, 0x61	; 97
 302:	21 50       	subi	r18, 0x01	; 1
 304:	80 40       	sbci	r24, 0x00	; 0
 306:	90 40       	sbci	r25, 0x00	; 0
 308:	e1 f7       	brne	.-8      	; 0x302 <process_result+0x24>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <process_result+0x2e>
 30c:	00 00       	nop
   _delay_ms(2000);	
}
 30e:	cf 91       	pop	r28
 310:	08 95       	ret

00000312 <finger_enrollment>:
	
}

void finger_enrollment()
{
	LCDClear();
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Deleting");
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 322:	82 e4       	ldi	r24, 0x42	; 66
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_delete_all());
 32a:	0e 94 1b 04 	call	0x836	; 0x836 <finger_delete_all>
 32e:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 332:	60 e0       	ldi	r22, 0x00	; 0
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Enrollment");
 33a:	60 e0       	ldi	r22, 0x00	; 0
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 342:	8b e4       	ldi	r24, 0x4B	; 75
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	LCDWriteStringXY(0,1,"Place Finger");
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 352:	86 e5       	ldi	r24, 0x56	; 86
 354:	91 e0       	ldi	r25, 0x01	; 1
 356:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
 35a:	2f ef       	ldi	r18, 0xFF	; 255
 35c:	87 ea       	ldi	r24, 0xA7	; 167
 35e:	91 e6       	ldi	r25, 0x61	; 97
 360:	21 50       	subi	r18, 0x01	; 1
 362:	80 40       	sbci	r24, 0x00	; 0
 364:	90 40       	sbci	r25, 0x00	; 0
 366:	e1 f7       	brne	.-8      	; 0x360 <finger_enrollment+0x4e>
 368:	00 c0       	rjmp	.+0      	; 0x36a <finger_enrollment+0x58>
 36a:	00 00       	nop
	_delay_ms(2000);
	LCDClear();
 36c:	60 e0       	ldi	r22, 0x00	; 0
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Finger Reading 1");
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 37c:	83 e6       	ldi	r24, 0x63	; 99
 37e:	91 e0       	ldi	r25, 0x01	; 1
 380:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_read());
 384:	0e 94 d7 03 	call	0x7ae	; 0x7ae <finger_read>
 388:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Generating char")
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 39c:	84 e7       	ldi	r24, 0x74	; 116
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_generate_char_file(1));
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <finger_generate_char_file>
 3ac:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 3b0:	60 e0       	ldi	r22, 0x00	; 0
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Finger Reading 2");
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 3c0:	84 e8       	ldi	r24, 0x84	; 132
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_read());
 3c8:	0e 94 d7 03 	call	0x7ae	; 0x7ae <finger_read>
 3cc:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 3d0:	60 e0       	ldi	r22, 0x00	; 0
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Generating char")
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	80 e0       	ldi	r24, 0x00	; 0
 3dc:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 3e0:	84 e7       	ldi	r24, 0x74	; 116
 3e2:	91 e0       	ldi	r25, 0x01	; 1
 3e4:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_generate_char_file(2));
 3e8:	82 e0       	ldi	r24, 0x02	; 2
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <finger_generate_char_file>
 3f0:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Generate temp");
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 404:	85 e9       	ldi	r24, 0x95	; 149
 406:	91 e0       	ldi	r25, 0x01	; 1
 408:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_generate_template());
 40c:	0e 94 0b 04 	call	0x816	; 0x816 <finger_generate_template>
 410:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 414:	60 e0       	ldi	r22, 0x00	; 0
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Storing..");
 41c:	60 e0       	ldi	r22, 0x00	; 0
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 424:	83 ea       	ldi	r24, 0xA3	; 163
 426:	91 e0       	ldi	r25, 0x01	; 1
 428:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_store(2));
 42c:	82 e0       	ldi	r24, 0x02	; 2
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 2b 04 	call	0x856	; 0x856 <finger_store>
 434:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
 438:	2f ef       	ldi	r18, 0xFF	; 255
 43a:	8f e4       	ldi	r24, 0x4F	; 79
 43c:	93 ec       	ldi	r25, 0xC3	; 195
 43e:	21 50       	subi	r18, 0x01	; 1
 440:	80 40       	sbci	r24, 0x00	; 0
 442:	90 40       	sbci	r25, 0x00	; 0
 444:	e1 f7       	brne	.-8      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 446:	00 c0       	rjmp	.+0      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 448:	00 00       	nop
	_delay_ms(4000);	
	LCDClear();
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
 452:	08 95       	ret

00000454 <finger_scan>:
}


void finger_scan()
{   uint16_t code;
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
	LCDClear();
 458:	60 e0       	ldi	r22, 0x00	; 0
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Welcome!");
 460:	60 e0       	ldi	r22, 0x00	; 0
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 468:	8d ea       	ldi	r24, 0xAD	; 173
 46a:	91 e0       	ldi	r25, 0x01	; 1
 46c:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	LCDWriteStringXY(0,1,"Place finger");
 470:	61 e0       	ldi	r22, 0x01	; 1
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 478:	86 eb       	ldi	r24, 0xB6	; 182
 47a:	91 e0       	ldi	r25, 0x01	; 1
 47c:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	while(finger_read()!=0x00);
 480:	0e 94 d7 03 	call	0x7ae	; 0x7ae <finger_read>
 484:	89 2b       	or	r24, r25
 486:	e1 f7       	brne	.-8      	; 0x480 <finger_scan+0x2c>
	LCDClear();
 488:	60 e0       	ldi	r22, 0x00	; 0
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Scanning...");
 490:	60 e0       	ldi	r22, 0x00	; 0
 492:	80 e0       	ldi	r24, 0x00	; 0
 494:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 498:	83 ec       	ldi	r24, 0xC3	; 195
 49a:	91 e0       	ldi	r25, 0x01	; 1
 49c:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
 4a0:	2f ef       	ldi	r18, 0xFF	; 255
 4a2:	83 ed       	ldi	r24, 0xD3	; 211
 4a4:	90 e3       	ldi	r25, 0x30	; 48
 4a6:	21 50       	subi	r18, 0x01	; 1
 4a8:	80 40       	sbci	r24, 0x00	; 0
 4aa:	90 40       	sbci	r25, 0x00	; 0
 4ac:	e1 f7       	brne	.-8      	; 0x4a6 <finger_scan+0x52>
 4ae:	00 c0       	rjmp	.+0      	; 0x4b0 <finger_scan+0x5c>
 4b0:	00 00       	nop
	_delay_ms(1000);
	LCDWriteStringXY(0,1,"Completed");
 4b2:	61 e0       	ldi	r22, 0x01	; 1
 4b4:	80 e0       	ldi	r24, 0x00	; 0
 4b6:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 4ba:	8f ec       	ldi	r24, 0xCF	; 207
 4bc:	91 e0       	ldi	r25, 0x01	; 1
 4be:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
 4c2:	2f ef       	ldi	r18, 0xFF	; 255
 4c4:	83 ed       	ldi	r24, 0xD3	; 211
 4c6:	90 e3       	ldi	r25, 0x30	; 48
 4c8:	21 50       	subi	r18, 0x01	; 1
 4ca:	80 40       	sbci	r24, 0x00	; 0
 4cc:	90 40       	sbci	r25, 0x00	; 0
 4ce:	e1 f7       	brne	.-8      	; 0x4c8 <finger_scan+0x74>
 4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <finger_scan+0x7e>
 4d2:	00 00       	nop
	_delay_ms(1000);
	LCDClear();
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"generating char");
 4dc:	60 e0       	ldi	r22, 0x00	; 0
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 4e4:	89 ed       	ldi	r24, 0xD9	; 217
 4e6:	91 e0       	ldi	r25, 0x01	; 1
 4e8:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	process_result(finger_generate_char_file(1));
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <finger_generate_char_file>
 4f4:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	LCDClear();
 4f8:	60 e0       	ldi	r22, 0x00	; 0
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
	LCDWriteStringXY(0,0,"Searching...");
 500:	60 e0       	ldi	r22, 0x00	; 0
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 508:	89 ee       	ldi	r24, 0xE9	; 233
 50a:	91 e0       	ldi	r25, 0x01	; 1
 50c:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
	code = finger_search();
 510:	0e 94 48 04 	call	0x890	; 0x890 <finger_search>
 514:	ec 01       	movw	r28, r24
	process_result(code);
 516:	0e 94 6f 01 	call	0x2de	; 0x2de <process_result>
	if(code==0x00)
 51a:	cd 2b       	or	r28, r29
 51c:	59 f4       	brne	.+22     	; 0x534 <finger_scan+0xe0>
	{
		PORTC &=~(1<<PINC5);
 51e:	45 98       	cbi	0x08, 5	; 8
 520:	2f ef       	ldi	r18, 0xFF	; 255
 522:	83 e2       	ldi	r24, 0x23	; 35
 524:	94 ef       	ldi	r25, 0xF4	; 244
 526:	21 50       	subi	r18, 0x01	; 1
 528:	80 40       	sbci	r24, 0x00	; 0
 52a:	90 40       	sbci	r25, 0x00	; 0
 52c:	e1 f7       	brne	.-8      	; 0x526 <finger_scan+0xd2>
 52e:	00 c0       	rjmp	.+0      	; 0x530 <finger_scan+0xdc>
 530:	00 00       	nop
		_delay_ms(5000);
		PORTC |= 1<<PINC5;
 532:	45 9a       	sbi	0x08, 5	; 8
 534:	2f ef       	ldi	r18, 0xFF	; 255
 536:	8f e4       	ldi	r24, 0x4F	; 79
 538:	93 ec       	ldi	r25, 0xC3	; 195
 53a:	21 50       	subi	r18, 0x01	; 1
 53c:	80 40       	sbci	r24, 0x00	; 0
 53e:	90 40       	sbci	r25, 0x00	; 0
 540:	e1 f7       	brne	.-8      	; 0x53a <finger_scan+0xe6>
 542:	00 c0       	rjmp	.+0      	; 0x544 <finger_scan+0xf0>
 544:	00 00       	nop
	}
	_delay_ms(4000);
	LCDClear();
 546:	60 e0       	ldi	r22, 0x00	; 0
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	0e 94 99 00 	call	0x132	; 0x132 <LCDByte>
}
 54e:	df 91       	pop	r29
 550:	cf 91       	pop	r28
 552:	08 95       	ret

00000554 <main>:
void process_result(uint16_t ret);


int main(void)
{
	LCDInit(LS_NONE);
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	0e 94 06 01 	call	0x20c	; 0x20c <LCDInit>
	finger_init();
 55a:	0e 94 c5 02 	call	0x58a	; 0x58a <finger_init>
	keys_init();
 55e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <keys_init>
	DDRC |= 1<<PINC5;
 562:	3d 9a       	sbi	0x07, 5	; 7
	PORTC |= 1<<PINC5;
 564:	45 9a       	sbi	0x08, 5	; 8
	
    
    while (1) 
    { 
		LCDWriteStringXY(0,0,"Welcome!");
 566:	60 e0       	ldi	r22, 0x00	; 0
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <LCDGotoXY>
 56e:	8d ea       	ldi	r24, 0xAD	; 173
 570:	91 e0       	ldi	r25, 0x01	; 1
 572:	0e 94 c5 00 	call	0x18a	; 0x18a <LCDWriteString>
		
		if(enroll_key_press())
 576:	30 99       	sbic	0x06, 0	; 6
 578:	03 c0       	rjmp	.+6      	; 0x580 <main+0x2c>
		{
			finger_enrollment();
 57a:	0e 94 89 01 	call	0x312	; 0x312 <finger_enrollment>
 57e:	f3 cf       	rjmp	.-26     	; 0x566 <main+0x12>
		}
		else if (finger_Scann_Key_press())
 580:	32 99       	sbic	0x06, 2	; 6
 582:	f1 cf       	rjmp	.-30     	; 0x566 <main+0x12>
		{
			finger_scan();
 584:	0e 94 2a 02 	call	0x454	; 0x454 <finger_scan>
 588:	ee cf       	rjmp	.-36     	; 0x566 <main+0x12>

0000058a <finger_init>:
 58a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 58e:	80 e1       	ldi	r24, 0x10	; 16
 590:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 594:	e1 ec       	ldi	r30, 0xC1	; 193
 596:	f0 e0       	ldi	r31, 0x00	; 0
 598:	80 81       	ld	r24, Z
 59a:	88 61       	ori	r24, 0x18	; 24
 59c:	80 83       	st	Z, r24
 59e:	e2 ec       	ldi	r30, 0xC2	; 194
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	80 81       	ld	r24, Z
 5a4:	8e 60       	ori	r24, 0x0E	; 14
 5a6:	80 83       	st	Z, r24
 5a8:	08 95       	ret

000005aa <finger_uart_transmit>:
 5aa:	e0 ec       	ldi	r30, 0xC0	; 192
 5ac:	f0 e0       	ldi	r31, 0x00	; 0
 5ae:	90 81       	ld	r25, Z
 5b0:	95 ff       	sbrs	r25, 5
 5b2:	fd cf       	rjmp	.-6      	; 0x5ae <finger_uart_transmit+0x4>
 5b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 5b8:	08 95       	ret

000005ba <finger_uart_recieve>:
 5ba:	e0 ec       	ldi	r30, 0xC0	; 192
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	80 81       	ld	r24, Z
 5c0:	88 23       	and	r24, r24
 5c2:	ec f7       	brge	.-6      	; 0x5be <finger_uart_recieve+0x4>
 5c4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 5c8:	08 95       	ret

000005ca <finger_transmit_header>:
 5ca:	cf 93       	push	r28
 5cc:	c8 2f       	mov	r28, r24
 5ce:	8f ee       	ldi	r24, 0xEF	; 239
 5d0:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5da:	8f ef       	ldi	r24, 0xFF	; 255
 5dc:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5e0:	8f ef       	ldi	r24, 0xFF	; 255
 5e2:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5e6:	8f ef       	ldi	r24, 0xFF	; 255
 5e8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5ec:	8f ef       	ldi	r24, 0xFF	; 255
 5ee:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5f8:	80 e0       	ldi	r24, 0x00	; 0
 5fa:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 5fe:	8c 2f       	mov	r24, r28
 600:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 604:	cf 91       	pop	r28
 606:	08 95       	ret

00000608 <finger_receive>:
 608:	0f 93       	push	r16
 60a:	1f 93       	push	r17
 60c:	cf 93       	push	r28
 60e:	df 93       	push	r29
 610:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 614:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 618:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 61c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 620:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 624:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 628:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 62c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 630:	c8 2f       	mov	r28, r24
 632:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 636:	d0 e0       	ldi	r29, 0x00	; 0
 638:	dc 2f       	mov	r29, r28
 63a:	cc 27       	eor	r28, r28
 63c:	c8 2b       	or	r28, r24
 63e:	22 97       	sbiw	r28, 0x02	; 2
 640:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 644:	08 2f       	mov	r16, r24
 646:	10 e0       	ldi	r17, 0x00	; 0
 648:	c2 30       	cpi	r28, 0x02	; 2
 64a:	d1 05       	cpc	r29, r1
 64c:	39 f4       	brne	.+14     	; 0x65c <finger_receive+0x54>
 64e:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 652:	08 2f       	mov	r16, r24
 654:	10 e0       	ldi	r17, 0x00	; 0
 656:	10 2f       	mov	r17, r16
 658:	00 27       	eor	r16, r16
 65a:	0e c0       	rjmp	.+28     	; 0x678 <finger_receive+0x70>
 65c:	23 97       	sbiw	r28, 0x03	; 3
 65e:	61 f4       	brne	.+24     	; 0x678 <finger_receive+0x70>
 660:	01 15       	cp	r16, r1
 662:	11 05       	cpc	r17, r1
 664:	49 f4       	brne	.+18     	; 0x678 <finger_receive+0x70>
 666:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 66a:	08 2f       	mov	r16, r24
 66c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 670:	10 e0       	ldi	r17, 0x00	; 0
 672:	10 2f       	mov	r17, r16
 674:	00 27       	eor	r16, r16
 676:	08 2b       	or	r16, r24
 678:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 67c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 680:	c8 01       	movw	r24, r16
 682:	df 91       	pop	r29
 684:	cf 91       	pop	r28
 686:	1f 91       	pop	r17
 688:	0f 91       	pop	r16
 68a:	08 95       	ret

0000068c <finger_search_receive>:
 68c:	cf 93       	push	r28
 68e:	df 93       	push	r29
 690:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 694:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 698:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 69c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6a0:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6a4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6a8:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6ac:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6b0:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6b4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6b8:	81 30       	cpi	r24, 0x01	; 1
 6ba:	59 f4       	brne	.+22     	; 0x6d2 <finger_search_receive+0x46>
 6bc:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6c0:	c8 2f       	mov	r28, r24
 6c2:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6c6:	d0 e0       	ldi	r29, 0x00	; 0
 6c8:	dc 2f       	mov	r29, r28
 6ca:	cc 27       	eor	r28, r28
 6cc:	c8 0f       	add	r28, r24
 6ce:	d1 1d       	adc	r29, r1
 6d0:	0d c0       	rjmp	.+26     	; 0x6ec <finger_search_receive+0x60>
 6d2:	89 30       	cpi	r24, 0x09	; 9
 6d4:	49 f0       	breq	.+18     	; 0x6e8 <finger_search_receive+0x5c>
 6d6:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6da:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6de:	c8 2f       	mov	r28, r24
 6e0:	d0 e0       	ldi	r29, 0x00	; 0
 6e2:	dc 2f       	mov	r29, r28
 6e4:	cc 27       	eor	r28, r28
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <finger_search_receive+0x60>
 6e8:	c0 e0       	ldi	r28, 0x00	; 0
 6ea:	d0 e0       	ldi	r29, 0x00	; 0
 6ec:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6f0:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6f4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6f8:	0e 94 dd 02 	call	0x5ba	; 0x5ba <finger_uart_recieve>
 6fc:	ce 01       	movw	r24, r28
 6fe:	df 91       	pop	r29
 700:	cf 91       	pop	r28
 702:	08 95       	ret

00000704 <finger_get_response_string>:
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	8e 31       	cpi	r24, 0x1E	; 30
 708:	91 05       	cpc	r25, r1
 70a:	08 f0       	brcs	.+2      	; 0x70e <finger_get_response_string+0xa>
 70c:	4a c0       	rjmp	.+148    	; 0x7a2 <finger_get_response_string+0x9e>
 70e:	fc 01       	movw	r30, r24
 710:	ec 5c       	subi	r30, 0xCC	; 204
 712:	ff 4f       	sbci	r31, 0xFF	; 255
 714:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__tablejump2__>
 718:	8f ef       	ldi	r24, 0xFF	; 255
 71a:	91 e0       	ldi	r25, 0x01	; 1
 71c:	08 95       	ret
 71e:	84 e1       	ldi	r24, 0x14	; 20
 720:	92 e0       	ldi	r25, 0x02	; 2
 722:	08 95       	ret
 724:	8e e1       	ldi	r24, 0x1E	; 30
 726:	92 e0       	ldi	r25, 0x02	; 2
 728:	08 95       	ret
 72a:	8d e2       	ldi	r24, 0x2D	; 45
 72c:	92 e0       	ldi	r25, 0x02	; 2
 72e:	08 95       	ret
 730:	8a e4       	ldi	r24, 0x4A	; 74
 732:	92 e0       	ldi	r25, 0x02	; 2
 734:	08 95       	ret
 736:	82 e6       	ldi	r24, 0x62	; 98
 738:	92 e0       	ldi	r25, 0x02	; 2
 73a:	08 95       	ret
 73c:	87 e7       	ldi	r24, 0x77	; 119
 73e:	92 e0       	ldi	r25, 0x02	; 2
 740:	08 95       	ret
 742:	81 e9       	ldi	r24, 0x91	; 145
 744:	92 e0       	ldi	r25, 0x02	; 2
 746:	08 95       	ret
 748:	81 ea       	ldi	r24, 0xA1	; 161
 74a:	92 e0       	ldi	r25, 0x02	; 2
 74c:	08 95       	ret
 74e:	80 eb       	ldi	r24, 0xB0	; 176
 750:	92 e0       	ldi	r25, 0x02	; 2
 752:	08 95       	ret
 754:	81 ec       	ldi	r24, 0xC1	; 193
 756:	92 e0       	ldi	r25, 0x02	; 2
 758:	08 95       	ret
 75a:	8a ed       	ldi	r24, 0xDA	; 218
 75c:	92 e0       	ldi	r25, 0x02	; 2
 75e:	08 95       	ret
 760:	8f ee       	ldi	r24, 0xEF	; 239
 762:	92 e0       	ldi	r25, 0x02	; 2
 764:	08 95       	ret
 766:	85 e0       	ldi	r24, 0x05	; 5
 768:	93 e0       	ldi	r25, 0x03	; 3
 76a:	08 95       	ret
 76c:	8d e1       	ldi	r24, 0x1D	; 29
 76e:	93 e0       	ldi	r25, 0x03	; 3
 770:	08 95       	ret
 772:	83 e3       	ldi	r24, 0x33	; 51
 774:	93 e0       	ldi	r25, 0x03	; 3
 776:	08 95       	ret
 778:	83 e4       	ldi	r24, 0x43	; 67
 77a:	93 e0       	ldi	r25, 0x03	; 3
 77c:	08 95       	ret
 77e:	89 e5       	ldi	r24, 0x59	; 89
 780:	93 e0       	ldi	r25, 0x03	; 3
 782:	08 95       	ret
 784:	8d e6       	ldi	r24, 0x6D	; 109
 786:	93 e0       	ldi	r25, 0x03	; 3
 788:	08 95       	ret
 78a:	8d e7       	ldi	r24, 0x7D	; 125
 78c:	93 e0       	ldi	r25, 0x03	; 3
 78e:	08 95       	ret
 790:	8e e8       	ldi	r24, 0x8E	; 142
 792:	93 e0       	ldi	r25, 0x03	; 3
 794:	08 95       	ret
 796:	86 ea       	ldi	r24, 0xA6	; 166
 798:	93 e0       	ldi	r25, 0x03	; 3
 79a:	08 95       	ret
 79c:	89 eb       	ldi	r24, 0xB9	; 185
 79e:	93 e0       	ldi	r25, 0x03	; 3
 7a0:	08 95       	ret
 7a2:	83 ed       	ldi	r24, 0xD3	; 211
 7a4:	93 e0       	ldi	r25, 0x03	; 3
 7a6:	08 95       	ret
 7a8:	86 ef       	ldi	r24, 0xF6	; 246
 7aa:	91 e0       	ldi	r25, 0x01	; 1
 7ac:	08 95       	ret

000007ae <finger_read>:
 7ae:	83 e0       	ldi	r24, 0x03	; 3
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	0e 94 e5 02 	call	0x5ca	; 0x5ca <finger_transmit_header>
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 7bc:	80 e0       	ldi	r24, 0x00	; 0
 7be:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 7c2:	85 e0       	ldi	r24, 0x05	; 5
 7c4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 7c8:	0e 94 04 03 	call	0x608	; 0x608 <finger_receive>
 7cc:	2f ef       	ldi	r18, 0xFF	; 255
 7ce:	39 e6       	ldi	r19, 0x69	; 105
 7d0:	48 e1       	ldi	r20, 0x18	; 24
 7d2:	21 50       	subi	r18, 0x01	; 1
 7d4:	30 40       	sbci	r19, 0x00	; 0
 7d6:	40 40       	sbci	r20, 0x00	; 0
 7d8:	e1 f7       	brne	.-8      	; 0x7d2 <finger_read+0x24>
 7da:	00 c0       	rjmp	.+0      	; 0x7dc <finger_read+0x2e>
 7dc:	00 00       	nop
 7de:	89 2b       	or	r24, r25
 7e0:	31 f7       	brne	.-52     	; 0x7ae <finger_read>
 7e2:	80 e0       	ldi	r24, 0x00	; 0
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	08 95       	ret

000007e8 <finger_generate_char_file>:
 7e8:	cf 93       	push	r28
 7ea:	c8 2f       	mov	r28, r24
 7ec:	84 e0       	ldi	r24, 0x04	; 4
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	0e 94 e5 02 	call	0x5ca	; 0x5ca <finger_transmit_header>
 7f4:	82 e0       	ldi	r24, 0x02	; 2
 7f6:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 7fa:	8c 2f       	mov	r24, r28
 7fc:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 800:	80 e0       	ldi	r24, 0x00	; 0
 802:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 806:	87 e0       	ldi	r24, 0x07	; 7
 808:	8c 0f       	add	r24, r28
 80a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 80e:	0e 94 04 03 	call	0x608	; 0x608 <finger_receive>
 812:	cf 91       	pop	r28
 814:	08 95       	ret

00000816 <finger_generate_template>:
 816:	83 e0       	ldi	r24, 0x03	; 3
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <finger_transmit_header>
 81e:	85 e0       	ldi	r24, 0x05	; 5
 820:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 824:	80 e0       	ldi	r24, 0x00	; 0
 826:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 82a:	89 e0       	ldi	r24, 0x09	; 9
 82c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 830:	0e 94 04 03 	call	0x608	; 0x608 <finger_receive>
 834:	08 95       	ret

00000836 <finger_delete_all>:
 836:	83 e0       	ldi	r24, 0x03	; 3
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <finger_transmit_header>
 83e:	8d e0       	ldi	r24, 0x0D	; 13
 840:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 844:	80 e0       	ldi	r24, 0x00	; 0
 846:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 84a:	81 e1       	ldi	r24, 0x11	; 17
 84c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 850:	0e 94 04 03 	call	0x608	; 0x608 <finger_receive>
 854:	08 95       	ret

00000856 <finger_store>:
 856:	cf 93       	push	r28
 858:	c8 2f       	mov	r28, r24
 85a:	86 e0       	ldi	r24, 0x06	; 6
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	0e 94 e5 02 	call	0x5ca	; 0x5ca <finger_transmit_header>
 862:	86 e0       	ldi	r24, 0x06	; 6
 864:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 868:	81 e0       	ldi	r24, 0x01	; 1
 86a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 86e:	80 e0       	ldi	r24, 0x00	; 0
 870:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 874:	8c 2f       	mov	r24, r28
 876:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 87a:	80 e0       	ldi	r24, 0x00	; 0
 87c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 880:	8e e0       	ldi	r24, 0x0E	; 14
 882:	8c 0f       	add	r24, r28
 884:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 888:	0e 94 04 03 	call	0x608	; 0x608 <finger_receive>
 88c:	cf 91       	pop	r28
 88e:	08 95       	ret

00000890 <finger_search>:
 890:	88 e0       	ldi	r24, 0x08	; 8
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 94 e5 02 	call	0x5ca	; 0x5ca <finger_transmit_header>
 898:	84 e0       	ldi	r24, 0x04	; 4
 89a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 89e:	81 e0       	ldi	r24, 0x01	; 1
 8a0:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8a4:	80 e0       	ldi	r24, 0x00	; 0
 8a6:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8aa:	81 e0       	ldi	r24, 0x01	; 1
 8ac:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8b0:	80 e0       	ldi	r24, 0x00	; 0
 8b2:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8b6:	8f ef       	ldi	r24, 0xFF	; 255
 8b8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8bc:	81 e0       	ldi	r24, 0x01	; 1
 8be:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8c2:	8e e0       	ldi	r24, 0x0E	; 14
 8c4:	0e 94 d5 02 	call	0x5aa	; 0x5aa <finger_uart_transmit>
 8c8:	0e 94 46 03 	call	0x68c	; 0x68c <finger_search_receive>
 8cc:	08 95       	ret

000008ce <__tablejump2__>:
 8ce:	ee 0f       	add	r30, r30
 8d0:	ff 1f       	adc	r31, r31
 8d2:	05 90       	lpm	r0, Z+
 8d4:	f4 91       	lpm	r31, Z
 8d6:	e0 2d       	mov	r30, r0
 8d8:	09 94       	ijmp

000008da <_exit>:
 8da:	f8 94       	cli

000008dc <__stop_program>:
 8dc:	ff cf       	rjmp	.-2      	; 0x8dc <__stop_program>
